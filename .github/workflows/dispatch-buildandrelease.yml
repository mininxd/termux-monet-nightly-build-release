name: Build and Release

on:
  push:
    branches:
      - master
      - 'github-releases/**'
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package_variant: [ apt-android-7, apt-android-5 ]

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Build APKs
        shell: bash {0}
        env:
          PACKAGE_VARIANT: ${{ matrix.package_variant }}
        run: |
          exit_on_error() { echo "$1"; exit 1; }

          echo "Setting vars"

          if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
              GITHUB_SHA="${{ github.event.pull_request.head.sha }}"
          fi

          CURRENT_VERSION_NAME_REGEX='\s+versionName "([^"]+)"$'
          CURRENT_VERSION_NAME="$(grep -m 1 -E "$CURRENT_VERSION_NAME_REGEX" ./app/build.gradle | sed -r "s/$CURRENT_VERSION_NAME_REGEX/\1/")"
          RELEASE_VERSION_NAME="v$CURRENT_VERSION_NAME+${GITHUB_SHA:0:7}"
          
          if ! printf "%s" "${RELEASE_VERSION_NAME/v/}" | grep -qP '^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$'; then
           exit_on_error "Invalid version name: '${RELEASE_VERSION_NAME/v/}'"
          fi

          APK_DIR_PATH="./app/build/outputs/apk/debug"
          APK_VERSION_TAG="$RELEASE_VERSION_NAME-${{ env.PACKAGE_VARIANT }}-github-debug"
          APK_BASENAME_PREFIX="termux-app_$APK_VERSION_TAG"

          echo "APK_DIR_PATH=$APK_DIR_PATH" >> $GITHUB_ENV
          echo "APK_VERSION_TAG=$APK_VERSION_TAG" >> $GITHUB_ENV
          echo "APK_BASENAME_PREFIX=$APK_BASENAME_PREFIX" >> $GITHUB_ENV

          echo "Building APKs for '$APK_VERSION_TAG'"
          export TERMUX_APP_VERSION_NAME="${RELEASE_VERSION_NAME/v/}"
          export TERMUX_APK_VERSION_TAG="$APK_VERSION_TAG"
          export TERMUX_PACKAGE_VARIANT="${{ env.PACKAGE_VARIANT }}"

          if ! ./gradlew assembleDebug; then
            exit_on_error "Build failed for '$APK_VERSION_TAG'."
          fi

          echo "Validating APKs"
          for abi in universal arm64-v8a armeabi-v7a x86_64 x86; do
            if ! test -f "$APK_DIR_PATH/${APK_BASENAME_PREFIX}_$abi.apk"; then
              files_found="$(ls "$APK_DIR_PATH")"
              exit_on_error "Missing APK: '$APK_DIR_PATH/${APK_BASENAME_PREFIX}_$abi.apk'. Files found: "$'\n'"$files_found"
            fi
          done

          echo "Generating sha256sums file"
          if ! (cd "$APK_DIR_PATH"; sha256sum \
            "${APK_BASENAME_PREFIX}_universal.apk" \
            "${APK_BASENAME_PREFIX}_arm64-v8a.apk" \
            "${APK_BASENAME_PREFIX}_armeabi-v7a.apk" \
            "${APK_BASENAME_PREFIX}_x86_64.apk" \
            "${APK_BASENAME_PREFIX}_x86.apk" \
            > "${APK_BASENAME_PREFIX}_sha256sums"); then
            exit_on_error "SHA256 checksum generation failed."
          fi

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apks
          path: ${{ env.APK_DIR_PATH }}/*.apk

      - name: Upload SHA256SUMS file
        uses: actions/upload-artifact@v4
        with:
          name: sha256sums
          path: ${{ env.APK_DIR_PATH }}/${{ env.APK_BASENAME_PREFIX }}_sha256sums

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download APK artifacts
        uses: actions/download-artifact@v4
        with:
          name: apks
          path: apks

      - name: Download SHA256SUMS file
        uses: actions/download-artifact@v4
        with:
          name: sha256sums
          path: sha256sums

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: "Release ${{ github.run_number }}"
          draft: false
          prerelease: false

      - name: Upload Universal APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apks/${{ env.APK_BASENAME_PREFIX }}_universal.apk
          asset_name: ${{ env.APK_BASENAME_PREFIX }}_universal.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload ARM64 APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apks/${{ env.APK_BASENAME_PREFIX }}_arm64-v8a.apk
          asset_name: ${{ env.APK_BASENAME_PREFIX }}_arm64-v8a.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload Armeabi-v7a APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apks/${{ env.APK_BASENAME_PREFIX }}_armeabi-v7a.apk
          asset_name: ${{ env.APK_BASENAME_PREFIX }}_armeabi-v7a.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload x86_64 APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apks/${{ env.APK_BASENAME_PREFIX }}_x86_64.apk
          asset_name: ${{ env.APK_BASENAME_PREFIX }}_x86_64.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload x86 APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apks/${{ env.APK_BASENAME_PREFIX }}_x86.apk
          asset_name: ${{ env.APK_BASENAME_PREFIX }}_x86.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload SHA256SUMS to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: sha256sums/${{ env.APK_BASENAME_PREFIX }}_sha256sums
          asset_name: ${{ env.APK_BASENAME_PREFIX }}_sha256sums
          asset_content_type: text/plain
          
